#!/bin/sh -e

# ---
# RightScript Name: Register with Azure Application Gateway
# Description: >
#   Registers a server in a backend pool of an Azure Application Gateway
#   The CLI only has a method to replace all servers in the pool, so this script gathers the
#   current list and adds an extra IP/hostname to it.
# Inputs:
#   AZURE_APP_GATEWAY_REGISTER:
#     Category: Azure Application Gateway
#     Description: Whether to register with an Application Gateway.
#     Input Type: single
#     Required: true
#     Advanced: false
#     Default: "text:false"
#     Possible Values: ["text:true", "text:false"]
#   AZURE_APP_GATEWAY_RESOURCE_GROUP:
#     Category: Azure Application Gateway
#     Description: The resource group of the Application Gateway.
#     Input Type: single
#     Required: false
#     Advanced: false
#     Default:
#   AZURE_APP_GATEWAY_NAME:
#     Category: Azure Application Gateway
#     Description: The name of the Application Gateway to register with.
#     Input Type: single
#     Required: false
#     Advanced: false
#     Default:
#   AZURE_APP_GATEWAY_POOL_NAME:
#     Category: Azure Application Gateway
#     Description: Name of the Application Gateway backend pool.
#     Input Type: single
#     Required: false
#     Advanced: false
#     Default:
#   AZURE_APP_GATEWAY_SERVER:
#     Category: Azure Application Gateway
#     Description: >
#       An IP or resolvable hostname to add to the Application Gateway backend pool
#       This would normally be the private IP of the host
#     Input Type: single
#     Required: false
#     Advanced: false
#     Default:
#     Possible Values: ["env:PRIVATE_IP", "env:PUBLIC_IP"]
# ...

if [ "$AZURE_APP_GATEWAY_REGISTER" != "true" ]; then
  echo "Not using Azure App Gateway, exiting."
  exit 0
fi

# if jq is not installed, lets install the linux binary
if ! type jq > /dev/null 2>&1; then
  echo 'Installing jq...'
  source /etc/profile.d/*proxy* > /dev/null 2>&1 || true
  curl -SsLk "https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64" | sudo tee /usr/local/bin/jq > /dev/null 2>&1
  sudo chmod +x /usr/local/bin/jq
  /usr/local/bin/jq --version
fi

out=$(azure network application-gateway address-pool show --json \
            --resource-group "$AZURE_APP_GATEWAY_RESOURCE_GROUP" \
            --gateway-name "$AZURE_APP_GATEWAY_NAME" \
            --name "$AZURE_APP_GATEWAY_POOL_NAME")

current_pool=$(echo $out | jq -r '.backendAddresses | map(.ipAddress) | join(",")')

echo "Current backend pool: $current_pool"
echo "AZURE_APP_GATEWAY_SERVER: $AZURE_APP_GATEWAY_SERVER"

# Check if our server is already in the pool
echo $current_pool | egrep -q "\b${AZURE_APP_GATEWAY_SERVER}\b" && echo "'$AZURE_APP_GATEWAY_SERVER' is already in backend pool" && exit 0

azure network application-gateway address-pool set \
      --resource-group "$AZURE_APP_GATEWAY_RESOURCE_GROUP" \
      --gateway-name "$AZURE_APP_GATEWAY_NAME" \
      --name "$AZURE_APP_GATEWAY_POOL_NAME" \
      --servers "${current_pool},${AZURE_APP_GATEWAY_SERVER}"

echo 'Done.'
